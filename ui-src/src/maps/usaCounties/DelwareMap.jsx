import React from "react";
import "../JapanMap.css"; // Using the global CSS file as requested

const COUNTY_DATA = {
  Sussex: { gameId: "USA_DE_005", name: "Sussex" },
  Kent: { gameId: "USA_DE_001", name: "Kent" },
  "New Castle": { gameId: "USA_DE_003", name: "New Castle" },
};

const countyPathData = {
  Sussex:
    "m 261.74,581.17 75.49,-3.15 2.84,-3.11 4.12,-1.47 1.51,-3.59 7.12,-3.36 5.08,-11.51 2.63,-3.36 2.5,-0.29 1.54,-3.31 2.86,-2.82 -0.06,-3.56 1.13,-2.66 3.8,-1.28 5.34,-3.12 2.15,1.09 4.92,-1.54 4.16,-0.61 2.85,1.33 1.78,-1.46 5.3,-0.52 0.74,-2.17 3.53,0.69 3.34,-0.88 -0.88,-2.54 1.91,-2.38 0.22,-3.8 -1.91,-2.27 1.95,-1.88 -0.98,-4.01 3.19,-2.95 4.99,-1.76 0.84,-3.44 3.83,0.25 1.91,1.07 0.75,3.25 2.33,-2.07 3.72,5.52 3.05,-3.18 1.71,1.16 -0.6,2.3 3.83,0.06 1.15,-1.95 3.51,0.57 1.51,-2.15 3.48,1.73 0.73,2.6 -1.79,3.56 -0.53,3.61 2.17,5.09 3.7,6.57 10.73,11.95 3.12,4.87 4.61,3.74 14.04,19.01 12.05,11.97 6.68,9.49 14.23,9.55 11.28,4.54 9.33,-0.47 7.3,-3.3 1.7,-5.14 -2.65,-3.39 3.22,-0.22 1.15,3.85 3.36,14.39 1.39,19.5 6.35,44.37 0.2,16.47 1.54,13.52 0.86,0.66 4.92,69.74 0.45,20.2 -61.86,0.23 -30.42,-0.04 -59.54,-0.36 -20.16,-0.31 -32.33,-0.86 -27.08,-0.86 -31.93,-1.4 -14.66,-0.53 -13.95,-0.8 -2.21,-35.61 -0.59,-11.91 z",
  Kent: "m 245.86,312.58 20.23,-1.39 13.29,1.35 4.46,3.8 6.59,-0.65 2.69,0.28 6.06,-5.81 3.71,0.05 5.85,-5.05 5.83,1.14 6.83,-2.02 3.12,1.68 4.36,-2.7 2.65,-5.8 -0.13,-3 5.74,-3.78 -0.51,-3.55 -1.41,-2.05 1.5,-2.32 5.34,-0.95 1.63,-2.07 2.56,2.16 3.31,-4.42 3.15,-0.17 4.05,-4.05 3.17,3.74 4.97,2.62 1.05,1.59 -1.04,3.03 1.67,2.17 4.89,2.18 -0.23,1.41 4.75,3.31 3.98,1.49 2.26,2.02 1.14,3.62 2.13,1.7 4.04,1.21 0.94,2.3 -0.3,6.32 1.26,4.48 7.61,9.99 0.75,2.14 3.18,3.09 1.26,3.46 -1.43,4.03 0.28,4.64 1.66,1.57 -0.89,8.38 0.49,2.06 2.99,3.64 v 3.95 l 0.98,2.55 -0.31,6.06 -1.06,4.33 -3.64,6.8 -0.9,3.15 -0.16,7.42 -1.22,1.7 0.42,3.29 2.19,7.75 -0.27,6.66 3.74,13.47 -1.49,11.78 0.49,6.74 2.59,5.18 3.76,3.85 3.61,1.37 3.73,3.35 5.14,5.82 6.45,4.59 2.2,2.81 10.14,18.26 1.53,4.26 1.52,7.56 -0.42,9.53 0.29,2.96 -0.73,-2.6 -3.48,-1.73 -1.51,2.15 -3.51,-0.57 -1.15,1.95 -3.83,-0.06 0.6,-2.3 -1.71,-1.16 -3.05,3.18 -3.72,-5.52 -2.33,2.07 -0.75,-3.25 -1.91,-1.07 -3.83,-0.25 -0.84,3.44 -4.99,1.76 -3.19,2.95 0.98,4.01 -1.95,1.88 1.91,2.27 -0.22,3.8 -1.91,2.38 0.88,2.54 -3.34,0.88 -3.53,-0.69 -0.74,2.17 -5.3,0.52 -1.78,1.46 -2.85,-1.33 -4.16,0.61 -4.92,1.54 -2.15,-1.09 -5.34,3.12 -3.8,1.28 -1.13,2.66 0.06,3.56 -2.86,2.82 -1.54,3.31 -2.5,0.29 -2.63,3.36 -5.08,11.51 -7.12,3.36 -1.51,3.59 -4.12,1.47 -2.84,3.11 -75.49,3.15 -1.38,-22.68 -7.63,-129.63 -0.85,-11.66 -1.49,-28.69 -0.72,-7.45 -2.06,-39.22 z",
  "New Castle":
    "m 330.67,124.02 3.56,-2.75 1.65,3.27 1.65,10.58 -2.71,0.34 -2.55,-4.91 z m -4.06,14.74 7.01,5.83 -1.81,2.41 -3.01,-1.71 z m 30.15,134.5 -4.05,4.05 -3.15,0.17 -3.31,4.42 -2.56,-2.16 -1.63,2.07 -5.34,0.95 -1.5,2.32 1.41,2.05 0.51,3.55 -5.74,3.78 0.13,3 -2.65,5.8 -4.36,2.7 -3.12,-1.68 -6.83,2.02 -5.83,-1.14 -5.85,5.05 -3.71,-0.05 -6.06,5.81 -2.69,-0.28 -6.59,0.65 -4.46,-3.8 -13.29,-1.35 -20.23,1.39 -8.67,-145.79 -2.76,-50.16 -0.49,-11.94 0.22,-24.05 -0.04,-12.75 6.59,0.03 3.47,-8.96 5.82,-11.38 3.88,-5.87 7.74,-9.33 4.49,-4.51 7.03,-6.08 6.77,-4.84 10.31,-5.77 9.47,-4.13 10.78,-3.21 10.48,-1.97 10.31,-0.87 13.81,0.48 9.28,1.1 8.7,1.74 7.82,2.42 12.21,5.07 11.41,6.38 2.06,1.5 -20.04,11.57 -9.68,18.22 -8.4,19.95 -23.7,36.42 -3.02,0.12 -8.07,3.14 -11.09,16.68 -1.32,3.45 1.59,3.33 -1.1,2.29 0.85,5.05 3.68,4.87 2.15,-0.09 5.4,5.9 6.68,6.43 3.81,3.16 -1.16,2.14 -1.68,10.31 -0.46,7.68 -0.9,5.82 -1.82,4.54 -5.06,7.38 -0.04,3.47 -2.36,6.4 0.32,6.68 1.28,3.89 4.12,5.77 3.17,3.12 0.55,3.73 7.11,4.92 7.75,7.98 1.13,4.09 5.52,10.25 1.03,5.71 2.45,1.9 z",
};

const countyOrderFromSVG = ["Sussex", "Kent", "New Castle"];

function DelawareMap({ onSelectCounty, selectedCountyGameId }) {
  const handleCountyClick = (svgId) => {
    const county = COUNTY_DATA[svgId];
    if (county && onSelectCounty) {
      onSelectCounty(county.gameId, county.name);
    } else {
      console.warn(`No game data found for SVG ID: ${svgId}`);
    }
  };

  const renderCountyPath = (svgId) => {
    const countyInfo = COUNTY_DATA[svgId];
    if (!countyInfo) {
      console.warn(`No COUNTY_DATA found for SVG ID: ${svgId}`);
      return null;
    }

    const pathD = countyPathData[svgId];

    if (!pathD) {
      console.warn(`Path data (d attribute) missing for ${svgId}`);
      return null;
    }

    // Since the SVG coordinates are large, we'll use the SVG's transform to position the group.
    return (
      <path
        key={svgId}
        id={svgId}
        title={countyInfo.name}
        className={`prefecture-path ${
          selectedCountyGameId === countyInfo.gameId ? "selected" : ""
        }`}
        onClick={() => handleCountyClick(svgId)}
        d={pathD}
      />
    );
  };

  return (
    <svg
      version="1.2"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 400 810"
      className="interactive-japan-map" // Using the same class name for shared styles
      preserveAspectRatio="xMidYMid meet"
    >
      {/* The transform from the original SVG is applied here to correctly position the counties */}
      <g id="delaware-counties-group" transform="translate(-197, 5)">
        {countyOrderFromSVG.map((svgId) => renderCountyPath(svgId))}
      </g>
    </svg>
  );
}

export default DelawareMap;
